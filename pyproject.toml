[project]
name = "pepme"
version = "0.1.0"
description = "Metrics for benchmarking peptide generation models."
readme = "README.md"
authors = [
    { name = "Jan Olszewski", email = "janolszewski1906@gmail.com" }
]
requires-python = ">=3.10"
dependencies = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "matplotlib>=3.9.4",
    "numpy>=2.0",
    "pandas>=2.0",
    "pydantic>=2.11.7",
    "pymoo>=0.6.1.5",
    "scipy>=1.13.1",
    "torch>=2.0",
    "tqdm>=4.67.1",
    "transformers>=4.53.0",
    "scikit-learn<1.7.0",
    "umap-learn>=0.5.9.post2",
    "pandoc>=2.4",
    "modlamp>=4.3.2",
    "pylev>=1.4.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "nbstripout>=0.8.1",
    "pandas-stubs>=2.2.2.240807",
    "pre-commit-uv>=4.1.4",
    "pytest>=8.4.1",
    "ruff>=0.12.0",
    "scipy-stubs>=1.15.3.0",
    "types-tqdm>=4.67.0.20250516",
]

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    #"D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "TCH",  # Typing imports
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We don't want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true
no_strict_optional = true
