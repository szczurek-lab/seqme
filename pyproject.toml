[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "seqme"
version = "0.1.0"
description = "Metrics for evaluating biological sequence generation models."
readme = "README.md"
authors = [
    { name = "Rasmus Møller-Larsen" },
    { name = "Jan Olszewski" }
]
requires-python = ">=3.10"
dependencies = [
    "matplotlib>3.6",
    "numpy",
    "pandas>=1.5",
    "pymoo",
    "scipy",
    "torch",
    "tqdm",
    "transformers",
    "scikit-learn<1.7.0",
    "umap-learn",
    "modlamp",
    "pylev",
]

[project.optional-dependencies]
doc = [
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
    "sphinx==7.1.2",
    "sphinx-rtd-theme==1.3.0rc1",
    "nbsphinx",
    "myst-parser",
    "myst_nb",
    "scanpydoc",
    "seaborn",
    "sphinx-book-theme",
    "sphinx-gallery",
    "sphinx-copybutton",
    "sphinx-autodoc-typehints",
]

dev = [
    "mypy>=1.16.1",
    "nbstripout>=0.8.1",
    "pandas-stubs",
    "pre-commit>=3.0.0",
    "pytest>=8.4.1",
    "ruff>=0.12.0",
    "scipy-stubs",
    "types-tqdm",
    "ipykernel>=6.29.5",
    "ipywidgets>=8.1.7",
]

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true
[tool.ruff.lint]
select = [
    "F",      # Errors detected by Pyflakes
    "E",      # Errors detected by Pycodestyle
    "W",      # Warnings detected by Pycodestyle
    "I",      # isort (import sorting)
    "D",      # pydocstyle (docstring conventions)
    "B",      # flake8-bugbear (common bugs and design issues)
    "TID",    # flake8-tidy-imports (import restrictions)
    "C4",     # flake8-comprehensions (list/set/dict comprehension improvements)
    "BLE",    # flake8-blind-except (discourage bare except)
    "UP",     # pyupgrade (syntax upgrades for newer Python versions)
    "TCH",    # typing imports (prefer standard library typing)
    "RUF100", # Report unused noqa directives
]

ignore = [
    # Pycodestyle
    "E501",  # Line too long (we accept long comments; formatter handles code)
    "E731",  # Do not assign a lambda expression (we allow this for convenience)
    "E741",  # Ambiguous variable name "l", "O", or "I" (we allow "I" for identity matrices)

    # Flake8-bugbear
    "B008",  # Do not perform function calls in default arguments (allowed when result is immutable)

    # Pydocstyle — disable “missing docstring” checks (docstrings optional)
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__

    # Pydocstyle — stylistic rules we don't want
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D203",  # 1 blank line required before class docstring
    "D212",  # Enforces first-line docstring — disabled, since we prefer second-line
    # "D213",  # Multi-line docstring should start on the second line
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true
no_strict_optional = true
